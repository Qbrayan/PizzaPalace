@model PizzaPalace.ViewModels.PizzaViewModel

@{
    ViewData["Title"] = "Home";
}

<h2>Pizza</h2>


@using (Html.BeginForm("Create","Home",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create a new order.</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(x => Model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => Model.Category, new SelectList(Model.Sizes, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Size" })
                @Html.ValidationMessageFor(x => x.Category, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => Model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.ListBoxFor(x => Model.ProductName, new MultiSelectList(Model.Toppings, "Value", "Text"), htmlAttributes: new { @class = "form-control", multiple="multiple", @id = "Topping" })
                @Html.ValidationMessageFor(x => x.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts{

    @*<script src="~/js/people.js"></script>*@

}

